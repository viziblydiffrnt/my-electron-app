'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasYarn = exports.yarnOrNpmSpawn = undefined;

var _crossSpawnPromise = require('cross-spawn-promise');

var _crossSpawnPromise2 = _interopRequireDefault(_crossSpawnPromise);

var _logSymbols = require('log-symbols');

var _logSymbols2 = _interopRequireDefault(_logSymbols);

var _yarnOrNpm = require('yarn-or-npm');

var _yarnOrNpm2 = _interopRequireDefault(_yarnOrNpm);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var safeYarnOrNpm = function safeYarnOrNpm() {
  var system = (0, _yarnOrNpm2.default)();
  switch (process.env.NODE_INSTALLER) {
    case 'yarn':
    case 'npm':
      return process.env.NODE_INSTALLER;
    default:
      if (process.env.NODE_INSTALLER) {
        console.warn((_logSymbols2.default.warning + ' Unknown NODE_INSTALLER, using detected installer ' + system).yellow);
      }
      return system;
  }
};

exports.default = safeYarnOrNpm;
var yarnOrNpmSpawn = exports.yarnOrNpmSpawn = function yarnOrNpmSpawn() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return _crossSpawnPromise2.default.apply(undefined, [safeYarnOrNpm()].concat(args));
};

var hasYarn = exports.hasYarn = function hasYarn() {
  return safeYarnOrNpm() === 'yarn';
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWwveWFybi1vci1ucG0uanMiXSwibmFtZXMiOlsic2FmZVlhcm5Pck5wbSIsInN5c3RlbSIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0lOU1RBTExFUiIsImNvbnNvbGUiLCJ3YXJuIiwid2FybmluZyIsInllbGxvdyIsInlhcm5Pck5wbVNwYXduIiwiYXJncyIsImhhc1lhcm4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLGdCQUFnQixTQUFoQkEsYUFBZ0IsR0FBTTtBQUMxQixNQUFNQyxTQUFTLDBCQUFmO0FBQ0EsVUFBUUMsUUFBUUMsR0FBUixDQUFZQyxjQUFwQjtBQUNFLFNBQUssTUFBTDtBQUNBLFNBQUssS0FBTDtBQUNFLGFBQU9GLFFBQVFDLEdBQVIsQ0FBWUMsY0FBbkI7QUFDRjtBQUNFLFVBQUlGLFFBQVFDLEdBQVIsQ0FBWUMsY0FBaEIsRUFBZ0M7QUFDOUJDLGdCQUFRQyxJQUFSLENBQWEsQ0FBRyxxQkFBV0MsT0FBZCwwREFBMEVOLE1BQTFFLEVBQW1GTyxNQUFoRztBQUNEO0FBQ0QsYUFBT1AsTUFBUDtBQVJKO0FBVUQsQ0FaRDs7a0JBY2VELGE7QUFFUixJQUFNUywwQ0FBaUIsU0FBakJBLGNBQWlCO0FBQUEsb0NBQUlDLElBQUo7QUFBSUEsUUFBSjtBQUFBOztBQUFBLFNBQWEsOENBQWFWLGVBQWIsU0FBaUNVLElBQWpDLEVBQWI7QUFBQSxDQUF2Qjs7QUFFQSxJQUFNQyw0QkFBVSxTQUFWQSxPQUFVO0FBQUEsU0FBTVgsb0JBQW9CLE1BQTFCO0FBQUEsQ0FBaEIiLCJmaWxlIjoidXRpbC95YXJuLW9yLW5wbS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzcGF3blByb21pc2UgZnJvbSAnY3Jvc3Mtc3Bhd24tcHJvbWlzZSc7XG5pbXBvcnQgbG9nU3ltYm9scyBmcm9tICdsb2ctc3ltYm9scyc7XG5pbXBvcnQgeWFybk9yTnBtIGZyb20gJ3lhcm4tb3ItbnBtJztcblxuY29uc3Qgc2FmZVlhcm5Pck5wbSA9ICgpID0+IHtcbiAgY29uc3Qgc3lzdGVtID0geWFybk9yTnBtKCk7XG4gIHN3aXRjaCAocHJvY2Vzcy5lbnYuTk9ERV9JTlNUQUxMRVIpIHtcbiAgICBjYXNlICd5YXJuJzpcbiAgICBjYXNlICducG0nOlxuICAgICAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfSU5TVEFMTEVSO1xuICAgIGRlZmF1bHQ6XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9JTlNUQUxMRVIpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGAke2xvZ1N5bWJvbHMud2FybmluZ30gVW5rbm93biBOT0RFX0lOU1RBTExFUiwgdXNpbmcgZGV0ZWN0ZWQgaW5zdGFsbGVyICR7c3lzdGVtfWAueWVsbG93KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzeXN0ZW07XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHNhZmVZYXJuT3JOcG07XG5cbmV4cG9ydCBjb25zdCB5YXJuT3JOcG1TcGF3biA9ICguLi5hcmdzKSA9PiBzcGF3blByb21pc2Uoc2FmZVlhcm5Pck5wbSgpLCAuLi5hcmdzKTtcblxuZXhwb3J0IGNvbnN0IGhhc1lhcm4gPSAoKSA9PiBzYWZlWWFybk9yTnBtKCkgPT09ICd5YXJuJztcbiJdfQ==