'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _bluebird = require('bluebird');

var _crossSpawnPromise = require('cross-spawn-promise');

var _crossSpawnPromise2 = _interopRequireDefault(_crossSpawnPromise);

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _moveApp = require('../../util/move-app');

var _moveApp2 = _interopRequireDefault(_moveApp);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var _ref = (0, _bluebird.coroutine)( /*#__PURE__*/_regenerator2.default.mark(function _callee(filePath, installSpinner) {
    var appPath, targetApplicationPath;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0, _crossSpawnPromise2.default)('unzip', ['-q', '-o', _path2.default.basename(filePath)], {
              cwd: _path2.default.dirname(filePath)
            });

          case 2:
            _context.next = 4;
            return _fsExtra2.default.readdir(_path2.default.dirname(filePath));

          case 4:
            _context.t0 = function (file) {
              return file.endsWith('.app');
            };

            _context.t1 = function (file) {
              return _path2.default.resolve(_path2.default.dirname(filePath), file);
            };

            _context.t2 = function (fA, fB) {
              return _fsExtra2.default.statSync(fA).ctime.getTime() - _fsExtra2.default.statSync(fB).ctime.getTime();
            };

            appPath = _context.sent.filter(_context.t0).map(_context.t1).sort(_context.t2)[0];
            targetApplicationPath = '/Applications/' + _path2.default.basename(appPath);
            _context.next = 11;
            return (0, _moveApp2.default)(appPath, targetApplicationPath, installSpinner);

          case 11:
            _context.next = 13;
            return (0, _crossSpawnPromise2.default)('open', ['-R', targetApplicationPath], { detached: true });

          case 13:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc3RhbGxlcnMvZGFyd2luL3ppcC5qcyJdLCJuYW1lcyI6WyJmaWxlUGF0aCIsImluc3RhbGxTcGlubmVyIiwiYmFzZW5hbWUiLCJjd2QiLCJkaXJuYW1lIiwicmVhZGRpciIsImZpbGUiLCJlbmRzV2l0aCIsInJlc29sdmUiLCJmQSIsImZCIiwic3RhdFN5bmMiLCJjdGltZSIsImdldFRpbWUiLCJhcHBQYXRoIiwiZmlsdGVyIiwibWFwIiwic29ydCIsInRhcmdldEFwcGxpY2F0aW9uUGF0aCIsImRldGFjaGVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7OzsrRUFFZSxpQkFBT0EsUUFBUCxFQUFpQkMsY0FBakI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDUCxpQ0FBYSxPQUFiLEVBQXNCLENBQUMsSUFBRCxFQUFPLElBQVAsRUFBYSxlQUFLQyxRQUFMLENBQWNGLFFBQWQsQ0FBYixDQUF0QixFQUE2RDtBQUNqRUcsbUJBQUssZUFBS0MsT0FBTCxDQUFhSixRQUFiO0FBRDRELGFBQTdELENBRE87O0FBQUE7QUFBQTtBQUFBLG1CQUtVLGtCQUFHSyxPQUFILENBQVcsZUFBS0QsT0FBTCxDQUFhSixRQUFiLENBQVgsQ0FMVjs7QUFBQTtBQUFBLDBCQUtxRDtBQUFBLHFCQUFRTSxLQUFLQyxRQUFMLENBQWMsTUFBZCxDQUFSO0FBQUEsYUFMckQ7O0FBQUEsMEJBTU47QUFBQSxxQkFBUSxlQUFLQyxPQUFMLENBQWEsZUFBS0osT0FBTCxDQUFhSixRQUFiLENBQWIsRUFBcUNNLElBQXJDLENBQVI7QUFBQSxhQU5NOztBQUFBLDBCQU9MLFVBQUNHLEVBQUQsRUFBS0MsRUFBTDtBQUFBLHFCQUFZLGtCQUFHQyxRQUFILENBQVlGLEVBQVosRUFBZ0JHLEtBQWhCLENBQXNCQyxPQUF0QixLQUFrQyxrQkFBR0YsUUFBSCxDQUFZRCxFQUFaLEVBQWdCRSxLQUFoQixDQUFzQkMsT0FBdEIsRUFBOUM7QUFBQSxhQVBLOztBQUtQQyxtQkFMTyxpQkFLOENDLE1BTDlDLGNBTVZDLEdBTlUsY0FPVkMsSUFQVSxjQU8wRSxDQVAxRTtBQVNQQyxpQ0FUTyxzQkFTa0MsZUFBS2hCLFFBQUwsQ0FBY1ksT0FBZCxDQVRsQztBQUFBO0FBQUEsbUJBV1AsdUJBQVFBLE9BQVIsRUFBaUJJLHFCQUFqQixFQUF3Q2pCLGNBQXhDLENBWE87O0FBQUE7QUFBQTtBQUFBLG1CQWFQLGlDQUFhLE1BQWIsRUFBcUIsQ0FBQyxJQUFELEVBQU9pQixxQkFBUCxDQUFyQixFQUFvRCxFQUFFQyxVQUFVLElBQVosRUFBcEQsQ0FiTzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHIiwiZmlsZSI6Imluc3RhbGxlcnMvZGFyd2luL3ppcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzcGF3blByb21pc2UgZnJvbSAnY3Jvc3Mtc3Bhd24tcHJvbWlzZSc7XG5pbXBvcnQgZnMgZnJvbSAnZnMtZXh0cmEnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgbW92ZUFwcCBmcm9tICcuLi8uLi91dGlsL21vdmUtYXBwJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKGZpbGVQYXRoLCBpbnN0YWxsU3Bpbm5lcikgPT4ge1xuICBhd2FpdCBzcGF3blByb21pc2UoJ3VuemlwJywgWyctcScsICctbycsIHBhdGguYmFzZW5hbWUoZmlsZVBhdGgpXSwge1xuICAgIGN3ZDogcGF0aC5kaXJuYW1lKGZpbGVQYXRoKSxcbiAgfSk7XG5cbiAgY29uc3QgYXBwUGF0aCA9IChhd2FpdCBmcy5yZWFkZGlyKHBhdGguZGlybmFtZShmaWxlUGF0aCkpKS5maWx0ZXIoZmlsZSA9PiBmaWxlLmVuZHNXaXRoKCcuYXBwJykpXG4gICAgLm1hcChmaWxlID0+IHBhdGgucmVzb2x2ZShwYXRoLmRpcm5hbWUoZmlsZVBhdGgpLCBmaWxlKSlcbiAgICAuc29ydCgoZkEsIGZCKSA9PiBmcy5zdGF0U3luYyhmQSkuY3RpbWUuZ2V0VGltZSgpIC0gZnMuc3RhdFN5bmMoZkIpLmN0aW1lLmdldFRpbWUoKSlbMF07XG5cbiAgY29uc3QgdGFyZ2V0QXBwbGljYXRpb25QYXRoID0gYC9BcHBsaWNhdGlvbnMvJHtwYXRoLmJhc2VuYW1lKGFwcFBhdGgpfWA7XG5cbiAgYXdhaXQgbW92ZUFwcChhcHBQYXRoLCB0YXJnZXRBcHBsaWNhdGlvblBhdGgsIGluc3RhbGxTcGlubmVyKTtcblxuICBhd2FpdCBzcGF3blByb21pc2UoJ29wZW4nLCBbJy1SJywgdGFyZ2V0QXBwbGljYXRpb25QYXRoXSwgeyBkZXRhY2hlZDogdHJ1ZSB9KTtcbn07XG4iXX0=