'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _bluebird = require('bluebird');

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _logSymbols = require('log-symbols');

var _logSymbols2 = _interopRequireDefault(_logSymbols);

var _oraHandler = require('../util/ora-handler');

var _oraHandler2 = _interopRequireDefault(_oraHandler);

var _confirmIfInteractive = require('../util/confirm-if-interactive');

var _confirmIfInteractive2 = _interopRequireDefault(_confirmIfInteractive);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var d = (0, _debug2.default)('electron-forge:init:directory');

exports.default = function () {
  var _ref = (0, _bluebird.coroutine)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(dir, interactive) {
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return (0, _oraHandler2.default)('Initializing Project Directory', function () {
              var _ref2 = (0, _bluebird.coroutine)( /*#__PURE__*/_regenerator2.default.mark(function _callee(initSpinner) {
                var files, confirm;
                return _regenerator2.default.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        d('creating directory:', dir);
                        _context.next = 3;
                        return _fsExtra2.default.mkdirs(dir);

                      case 3:
                        _context.next = 5;
                        return _fsExtra2.default.readdir(dir);

                      case 5:
                        files = _context.sent;

                        if (!(files.length !== 0)) {
                          _context.next = 14;
                          break;
                        }

                        d('found', files.length, 'files in the directory.  warning the user');
                        initSpinner.stop(_logSymbols2.default.warning);
                        _context.next = 11;
                        return (0, _confirmIfInteractive2.default)(interactive, 'WARNING: The specified path: "' + dir + '" is not empty, do you wish to continue?');

                      case 11:
                        confirm = _context.sent;

                        if (confirm) {
                          _context.next = 14;
                          break;
                        }

                        throw 'Cancelled by user';

                      case 14:
                      case 'end':
                        return _context.stop();
                    }
                  }
                }, _callee, undefined);
              }));

              return function (_x3) {
                return _ref2.apply(this, arguments);
              };
            }() // eslint-disable-line
            );

          case 2:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, undefined);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQvaW5pdC1kaXJlY3RvcnkuanMiXSwibmFtZXMiOlsiZCIsImRpciIsImludGVyYWN0aXZlIiwiaW5pdFNwaW5uZXIiLCJta2RpcnMiLCJyZWFkZGlyIiwiZmlsZXMiLCJsZW5ndGgiLCJzdG9wIiwid2FybmluZyIsImNvbmZpcm0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLElBQUkscUJBQU0sK0JBQU4sQ0FBVjs7OytFQUVlLGtCQUFPQyxHQUFQLEVBQVlDLFdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ1AsMEJBQVMsZ0NBQVQ7QUFBQSw0RkFBMkMsaUJBQU9DLFdBQVA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQy9DSCwwQkFBRSxxQkFBRixFQUF5QkMsR0FBekI7QUFEK0M7QUFBQSwrQkFFekMsa0JBQUdHLE1BQUgsQ0FBVUgsR0FBVixDQUZ5Qzs7QUFBQTtBQUFBO0FBQUEsK0JBSTNCLGtCQUFHSSxPQUFILENBQVdKLEdBQVgsQ0FKMkI7O0FBQUE7QUFJekNLLDZCQUp5Qzs7QUFBQSw4QkFLM0NBLE1BQU1DLE1BQU4sS0FBaUIsQ0FMMEI7QUFBQTtBQUFBO0FBQUE7O0FBTTdDUCwwQkFBRSxPQUFGLEVBQVdNLE1BQU1DLE1BQWpCLEVBQXlCLDJDQUF6QjtBQUNBSixvQ0FBWUssSUFBWixDQUFpQixxQkFBV0MsT0FBNUI7QUFQNkM7QUFBQSwrQkFRdkIsb0NBQXFCUCxXQUFyQixxQ0FBbUVELEdBQW5FLDhDQVJ1Qjs7QUFBQTtBQVF2Q1MsK0JBUnVDOztBQUFBLDRCQVN4Q0EsT0FUd0M7QUFBQTtBQUFBO0FBQUE7O0FBQUEsOEJBVXJDLG1CQVZxQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUEzQzs7QUFBQTtBQUFBO0FBQUE7QUFBQSxnQkFVMkI7QUFWM0IsYUFETzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHIiwiZmlsZSI6ImluaXQvaW5pdC1kaXJlY3RvcnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzLWV4dHJhJztcbmltcG9ydCBsb2dTeW1ib2xzIGZyb20gJ2xvZy1zeW1ib2xzJztcblxuaW1wb3J0IGFzeW5jT3JhIGZyb20gJy4uL3V0aWwvb3JhLWhhbmRsZXInO1xuaW1wb3J0IGNvbmZpcm1JZkludGVyYWN0aXZlIGZyb20gJy4uL3V0aWwvY29uZmlybS1pZi1pbnRlcmFjdGl2ZSc7XG5cbmNvbnN0IGQgPSBkZWJ1ZygnZWxlY3Ryb24tZm9yZ2U6aW5pdDpkaXJlY3RvcnknKTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKGRpciwgaW50ZXJhY3RpdmUpID0+IHtcbiAgYXdhaXQgYXN5bmNPcmEoJ0luaXRpYWxpemluZyBQcm9qZWN0IERpcmVjdG9yeScsIGFzeW5jIChpbml0U3Bpbm5lcikgPT4ge1xuICAgIGQoJ2NyZWF0aW5nIGRpcmVjdG9yeTonLCBkaXIpO1xuICAgIGF3YWl0IGZzLm1rZGlycyhkaXIpO1xuXG4gICAgY29uc3QgZmlsZXMgPSBhd2FpdCBmcy5yZWFkZGlyKGRpcik7XG4gICAgaWYgKGZpbGVzLmxlbmd0aCAhPT0gMCkge1xuICAgICAgZCgnZm91bmQnLCBmaWxlcy5sZW5ndGgsICdmaWxlcyBpbiB0aGUgZGlyZWN0b3J5LiAgd2FybmluZyB0aGUgdXNlcicpO1xuICAgICAgaW5pdFNwaW5uZXIuc3RvcChsb2dTeW1ib2xzLndhcm5pbmcpO1xuICAgICAgY29uc3QgY29uZmlybSA9IGF3YWl0IGNvbmZpcm1JZkludGVyYWN0aXZlKGludGVyYWN0aXZlLCBgV0FSTklORzogVGhlIHNwZWNpZmllZCBwYXRoOiBcIiR7ZGlyfVwiIGlzIG5vdCBlbXB0eSwgZG8geW91IHdpc2ggdG8gY29udGludWU/YCk7XG4gICAgICBpZiAoIWNvbmZpcm0pIHtcbiAgICAgICAgdGhyb3cgJ0NhbmNlbGxlZCBieSB1c2VyJzsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgICAgfVxuICAgIH1cbiAgfSk7XG59O1xuIl19